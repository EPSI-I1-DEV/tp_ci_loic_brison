name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  unit_test:
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_DB: qieam
          POSTGRES_HOST: postgres
          POSTGRES_USER: gael
          POSTGRES_PORT: 5432
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    runs-on: ubuntu-latest
    container: maven:3.5.4-jdk-8
    steps:
    - uses: actions/checkout@v3
    - name: Unit Test with Maven
      run: mvn clean test --file pom.xml
      env:
        DATABASE_URL_TEST: 'postgres://gael:@postgres:5432/qieam'
        
  sonar_analyze:
    runs-on: ubuntu-latest
    container: maven:3.6.3-jdk-11
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_DB: qieam
          POSTGRES_HOST: postgres
          POSTGRES_USER: gael
          POSTGRES_PORT: 5432
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v3
    - name: Analyze with Sonar
      run: mvn verify sonar:sonar -Dsonar.projectKey=EPSI-I1-DEV_tp_ci_loic_brison -Dsonar.qualitygate.wait=true
      env:
        DATABASE_URL_TEST: 'postgres://gael:@postgres:5432/qieam'
